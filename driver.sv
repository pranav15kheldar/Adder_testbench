/* Driver Class Driver Input generated by generator to interface */
class driver;
    virtual inf_adder vir_inf_adder; // Here interface is virtual because it is static and to use in class which is dynamic we need to dyanamic
    mailbox gen2driver;
    transaction transc;

    function  new(mailbox gen2driver , virtual inf_adder vir_inf_adder);
        this.gen2driver = gen2driver;
        this.vir_inf_adder = vir_inf_adder;
    endfunction

    task main();
        forever begin
            @(posedge vir_inf_adder.clk);
            gen2driver.get(transc); // Recive the data from generator 
            // And Send it to interface
            vir_inf_adder.a <= transc.a;
            vir_inf_adder.b <= transc.b;
            vir_inf_adder.c <= transc.c;
            transc.sum <= vir_inf_adder.sum;
            transc.carry <= vir_inf_adder.carry;
             $display("---------------------------- Transcation Begin --------------------");
            $display("****************Values of Input in Driver *******************\n time = %0d , A : %0d , B = %0d , C = %0d ",$time , transc.a , transc.b , transc.c);
            $display("=================================================================");
        end
    endtask
endclass